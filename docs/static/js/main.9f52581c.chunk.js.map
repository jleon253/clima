{"version":3,"sources":["components/Header/Header.jsx","components/Error/Error.jsx","components/Formulario/Formulario.jsx","components/Clima/Clima.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","titulo","className","href","Error","msg","Formulario","datos","setDatos","setConsultar","useState","error","setError","ciudad","pais","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","sys","main","weather","clouds","urlIcon","icon","country","style","display","flexDirection","alignItems","src","width","alt","temp","description","all","moment","unix","sunrise","format","sunset","temp_min","temp_max","pressure","humidity","App","consultar","setResultado","useEffect","a","url","fetch","api","json","data","console","log","cod","consultarAPI","componente","message","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9f52581c.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Header = ({ titulo }) => {\n\treturn (\n\t\t<nav>\n\t\t\t<div className='nav-wrapper blue darken-1'>\n\t\t\t\t<a href='#!' className='brand-logo center'>\n\t\t\t\t\t{titulo}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n\nHeader.propTypes = {\n\ttitulo: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Error = ({ msg }) => {\n\treturn (<div className='error red darken-2'>{msg}</div>)\n}\n\nError.propTypes = {\n\tmsg: PropTypes.string.isRequired,\n}\n\nexport default Error\n","import React, {useState} from 'react'\nimport Error from '../Error/Error'\nimport PropTypes from 'prop-types'\n\nconst Formulario = ({datos, setDatos, setConsultar}) => {\n  const [error, setError] = useState(false)\n  const {ciudad, pais} = datos;\n\n  const handleChange = e => {\n    setDatos({\n      ...datos,\n      [e.target.name] : e.target.value\n    })\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(ciudad.trim() === '' || pais.trim() === '') {\n      setError(true)\n      return\n    }\n    setError(false)\n    setConsultar(true)\n  };\n\n\treturn (\n    <form className='col s12' onSubmit={handleSubmit}>\n      { error ? (<Error msg='Inputs are required' />) : null}\n\t\t\t<div className='row'>\n\t\t\t\t<div className='input-field col s12'>\n\t\t\t\t\t<input type='text' name='ciudad' id='ciudad' value={ciudad} onChange={handleChange} />\n\t\t\t\t\t<label htmlFor='ciudad'>City:</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='input-field col s12'>\n\t\t\t\t\t<select name='pais' id='pais' value={pais} onChange={handleChange}>\n\t\t\t\t\t\t<option value=''>Choose here...</option>\n\t\t\t\t\t\t<option value='US'>United States</option>\n\t\t\t\t\t\t<option value='MX'>México</option>\n\t\t\t\t\t\t<option value='AR'>Argentina</option>\n\t\t\t\t\t\t<option value='CO'>Colombia</option>\n\t\t\t\t\t\t<option value='CR'>Costa Rica</option>\n\t\t\t\t\t\t<option value='ES'>Spain</option>\n\t\t\t\t\t\t<option value='PE'>Perú</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<label htmlFor='pais'>Country:</label>\n\t\t\t\t</div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col s12 m12\">\n          <button type=\"submit\" className=\"col s12 m12 btn waves-effect waves-light yellow accent-4 black-text\">\n            Search\n             <i className=\"material-icons right\">send</i>\n          </button>\n        </div>\n      </div>\n\t\t</form>\n\t)\n}\n\nFormulario.propTypes = {\n  datos: PropTypes.object.isRequired,\n  setDatos: PropTypes.func.isRequired,\n  setConsultar: PropTypes.func.isRequired,\n}\n\nexport default Formulario\n","import React from 'react'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\n\nconst Clima = ({ resultado }) => {\n\tconst { name, sys, main, weather, clouds } = resultado\n\tif (!name) return null // Si aún no hay resultado\n\tconst urlIcon = `http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`\n\n\treturn (\n\t\t<div className='card hoverable blue-grey lighten-3'>\n\t\t\t<div className='card-content'>\n\t\t\t\t<span className='card-title activator grey-text text-darken-4'>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t{name},{sys.country}\n\t\t\t\t\t</b>\n\t\t\t\t\t<i className='material-icons right'>more_vert</i>\n\t\t\t\t</span>\n\t\t\t\t<div\n\t\t\t\t\tclassName='row'\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img src={urlIcon} width='100' alt='weather icon' />\n\t\t\t\t\t<span className='temperatura'>{main.temp} &#x2103;</span>\n\t\t\t\t</div>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<b>{weather[0].main}</b> - {weather[0].description}\n\t\t\t\t</blockquote>\n\t\t\t\t<div className='divider'></div>\n\t\t\t\t<div className='row section'>\n\t\t\t\t\t<div className='col s6'>\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t<small>Clouds:</small>\n\t\t\t\t\t\t</b>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s6'>\n\t\t\t\t\t\t<small>{clouds.all} %</small>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s6'>\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t<small>Sunrise:</small>\n\t\t\t\t\t\t</b>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s6'>\n\t\t\t\t\t\t<small>{moment.unix(sys.sunrise).format('LT')}</small>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s6'>\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t<small>Sunset:</small>\n\t\t\t\t\t\t</b>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s6'>\n\t\t\t\t\t\t<small>{moment.unix(sys.sunset).format('LT')}</small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='card-reveal'>\n\t\t\t\t<span className='card-title grey-text text-darken-4'>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t{name},{sys.country}\n\t\t\t\t\t</b>\n\t\t\t\t\t<i className='material-icons right'>close</i>\n\t\t\t\t</span>\n\t\t\t\t<div className='divider'></div>\n\t\t\t\t<div className='row section'>\n\t\t\t\t\t<div className='col s6'>\n\t\t\t\t\t\t<b>Temperature min:</b>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s6'>{main.temp_min} &#x2103;</div>\n\t\t\t\t\t<div className='col s6'>\n\t\t\t\t\t\t<b>Temperature max:</b>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s6'>{main.temp_max} &#x2103;</div>\n\t\t\t\t\t<div className='col s6'>\n\t\t\t\t\t\t<b>Pressure:</b>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s6'>{main.pressure} hpa</div>\n\t\t\t\t\t<div className='col s6'>\n\t\t\t\t\t\t<b>Humidity:</b>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col s6'>{main.humidity} %</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nClima.propTypes = {\n\tresultado: PropTypes.object.isRequired,\n}\n\nexport default Clima\n","import React, { Fragment, useState, useEffect } from 'react'\nimport Header from './components/Header/Header'\nimport Formulario from './components/Formulario/Formulario'\nimport Clima from './components/Clima/Clima'\nimport Error from './components/Error/Error'\n\nfunction App() {\n\tconst [datos, setDatos] = useState({\n\t\tciudad: '',\n\t\tpais: '',\n\t})\n\tconst [consultar, setConsultar] = useState(false)\n\tconst [resultado, setResultado] = useState({})\n\tconst [error, setError] = useState(false)\n\tconst { ciudad, pais } = datos\n\n\tuseEffect(() => {\n\t\tconst consultarAPI = async () => {\n\t\t\tconst appId = '17bae31a63f045df10c5f08b3defc8a8'\n\t\t\tconst unitsTemp = 'metric' // https://openweathermap.org/api/one-call-api#data (Units format: metric = Celsius)\n\t\t\tconst url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}&units=${unitsTemp}`\n\t\t\tif (consultar) {\n\t\t\t\tconst api = await fetch(url)\n\t\t\t\tconst data = await api.json()\n\t\t\t\tconsole.log(data)\n\t\t\t\tsetResultado(data)\n\t\t\t\tsetConsultar(false)\n\t\t\t\tif (data.cod === '404') {\n\t\t\t\t\tsetError(true)\n\t\t\t\t} else {\n\t\t\t\t\tsetError(false)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconsultarAPI()\n\t\t// eslint-disable-next-line\n\t}, [consultar])\n\n\tlet componente = error ? (\n\t\t<Error msg={resultado.message} />\n\t) : (\n\t\t<Clima resultado={resultado} />\n\t)\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Header titulo='Weather - React App' />\n\t\t\t<div className='contenedor-form'>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div className='col m6 s12'>\n\t\t\t\t\t\t\t<Formulario\n\t\t\t\t\t\t\t\tdatos={datos}\n\t\t\t\t\t\t\t\tsetDatos={setDatos}\n\t\t\t\t\t\t\t\tsetConsultar={setConsultar}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col m6 s12'>{componente}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}